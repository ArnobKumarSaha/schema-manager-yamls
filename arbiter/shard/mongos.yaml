apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: "2022-02-23T10:12:29Z"
  generation: 1
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: mongo
    app.kubernetes.io/managed-by: kubedb.com
    app.kubernetes.io/name: mongodbs.kubedb.com
    mongodb.kubedb.com/node.mongos: mongo-mongos
  name: mongo-mongos
  namespace: db
  ownerReferences:
  - apiVersion: kubedb.com/v1alpha2
    blockOwnerDeletion: true
    controller: true
    kind: MongoDB
    name: mongo
    uid: 9c571c89-ba6c-4e0a-a3b7-ad9d2c9cdd35
  resourceVersion: "501204"
  uid: ced1025c-8ab8-4771-8723-6ddd7866c151
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: mongo
      app.kubernetes.io/managed-by: kubedb.com
      app.kubernetes.io/name: mongodbs.kubedb.com
      mongodb.kubedb.com/node.mongos: mongo-mongos
  serviceName: mongo-mongos-pods
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: database
        app.kubernetes.io/instance: mongo
        app.kubernetes.io/managed-by: kubedb.com
        app.kubernetes.io/name: mongodbs.kubedb.com
        mongodb.kubedb.com/node.mongos: mongo-mongos
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: mongo
                  app.kubernetes.io/managed-by: kubedb.com
                  app.kubernetes.io/name: mongodbs.kubedb.com
                  mongodb.kubedb.com/node.mongos: mongo-mongos
              namespaces:
              - db
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: mongo
                  app.kubernetes.io/managed-by: kubedb.com
                  app.kubernetes.io/name: mongodbs.kubedb.com
                  mongodb.kubedb.com/node.mongos: mongo-mongos
              namespaces:
              - db
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 50
      containers:
      - args:
        - --bind_ip_all
        - --port=27017
        - --clusterAuthMode=keyFile
        - --keyFile=/data/configdb/key.txt
        - --configdb=$(CONFIGDB_REPSET)
        - --ipv6
        - --tlsMode=disabled
        command:
        - mongos
        env:
        - name: CONFIGDB_REPSET
          value: cnfRepSet/mongo-configsvr-0.mongo-configsvr-pods.db.svc:27017,mongo-configsvr-1.mongo-configsvr-pods.db.svc:27017,mongo-configsvr-2.mongo-configsvr-pods.db.svc:27017
        - name: SHARD_REPSETS
          value: shard0/mongo-shard0-0.mongo-shard0-pods.db.svc:27017,mongo-shard0-1.mongo-shard0-pods.db.svc:27017,mongo-shard0-2.mongo-shard0-pods.db.svc:27017
            shard1/mongo-shard1-0.mongo-shard1-pods.db.svc:27017,mongo-shard1-1.mongo-shard1-pods.db.svc:27017,mongo-shard1-2.mongo-shard1-pods.db.svc:27017
        - name: SERVICE_NAME
          value: mongo
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongo-auth
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongo-auth
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: mongo:4.4.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - bash
              - -c
              - 'mongo admin --username=$MONGO_INITDB_ROOT_USERNAME --password=$MONGO_INITDB_ROOT_PASSWORD
                --quiet --eval "db.adminCommand({ shutdown: 1 })" || true'
        livenessProbe:
          exec:
            command:
            - bash
            - -c
            - "set -x; if [[ $(mongo admin --host=localhost  --username=$MONGO_INITDB_ROOT_USERNAME
              --password=$MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase=admin
              --quiet --eval \"db.adminCommand('ping').ok\" ) -eq \"1\" ]]; then \n
              \         exit 0\n        fi\n        exit 1"
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: mongodb
        ports:
        - containerPort: 27017
          name: db
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - "set -x; if [[ $(mongo admin --host=localhost  --username=$MONGO_INITDB_ROOT_USERNAME
              --password=$MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase=admin
              --quiet --eval \"db.adminCommand('ping').ok\" ) -eq \"1\" ]]; then \n
              \         exit 0\n        fi\n        exit 1"
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/configdb
          name: config
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - -c
        - "\n\t\t\techo \"running install.sh\"\n\t\t\t/scripts/install.sh"
        command:
        - /bin/sh
        env:
        - name: SSL_MODE
          value: disabled
        image: kubedb/mongodb-init:4.2-v3
        imagePullPolicy: IfNotPresent
        name: copy-config
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/configdb
          name: config
        - mountPath: /init-scripts
          name: init-scripts
        - mountPath: /var/run/mongodb/tls
          name: certdir
        - mountPath: /keydir-readonly
          name: keydir
      - args:
        - -c
        - /init-scripts/mongos.sh
        command:
        - /bin/sh
        env:
        - name: AUTH
          value: "true"
        - name: SSL_MODE
          value: disabled
        - name: CLUSTER_AUTH_MODE
          value: keyFile
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongo-auth
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongo-auth
        - name: CONFIGDB_REPSET
          value: cnfRepSet/mongo-configsvr-0.mongo-configsvr-pods.db.svc:27017,mongo-configsvr-1.mongo-configsvr-pods.db.svc:27017,mongo-configsvr-2.mongo-configsvr-pods.db.svc:27017
        - name: SHARD_REPSETS
          value: shard0/mongo-shard0-0.mongo-shard0-pods.db.svc:27017,mongo-shard0-1.mongo-shard0-pods.db.svc:27017,mongo-shard0-2.mongo-shard0-pods.db.svc:27017
            shard1/mongo-shard1-0.mongo-shard1-pods.db.svc:27017,mongo-shard1-1.mongo-shard1-pods.db.svc:27017,mongo-shard1-2.mongo-shard1-pods.db.svc:27017
        - name: SERVICE_NAME
          value: mongo
        image: mongo:4.4.6
        imagePullPolicy: IfNotPresent
        name: bootstrap
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /work-dir
          name: workdir
        - mountPath: /data/configdb
          name: config
        - mountPath: /init-scripts
          name: init-scripts
        - mountPath: /var/run/mongodb/tls
          name: certdir
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: mongo
      serviceAccountName: mongo
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: config
      - emptyDir: {}
        name: workdir
      - emptyDir: {}
        name: init-scripts
      - emptyDir: {}
        name: certdir
      - name: keydir
        secret:
          defaultMode: 256
          secretName: mongo-key
  updateStrategy:
    type: OnDelete
status:
  collisionCount: 0
  currentReplicas: 2
  currentRevision: mongo-mongos-6bcd7bd87
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
  updateRevision: mongo-mongos-6bcd7bd87
  updatedReplicas: 2
